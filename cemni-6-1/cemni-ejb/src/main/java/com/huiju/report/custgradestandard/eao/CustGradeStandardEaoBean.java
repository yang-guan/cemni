package com.huiju.report.custgradestandard.eao;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import com.huiju.common.GlobalConst;
import com.huiju.common.sql.entity.Sql;
import com.huiju.module.data.eao.GenericEaoImpl;

@Stateless(mappedName = "CustGradeStandardEaoBean")
public class CustGradeStandardEaoBean extends GenericEaoImpl<Sql, Long> implements CustGradeStandardEaoLocal {
	EntityManager em;

	@Override
	@PersistenceContext(unitName = "showcase")
	public void setEntityManager(EntityManager em) {
		super.setEntityManager(em);
		this.em = em;
	}

	@SuppressWarnings({ "rawtypes", "unchecked" })
	@Override
	public Map report(Map searchParam, Integer ifPage) {
		StringBuffer subJpql = new StringBuffer();
		StringBuffer cntJpql = new StringBuffer();
		Object EQ_fraNo = searchParam.get("EQ_fraNo");
		Object EQ_sdate = searchParam.get("EQ_sdate");
		Object EQ_edate = searchParam.get("EQ_edate");
		
		if (null != EQ_fraNo){
			subJpql.append(" and fracode in ('").append(EQ_fraNo.toString().replaceAll(",", "','")).append("')");
		}
		
		if (ifPage == 1) {
			cntJpql.append(" select count(1) from d_franchisee                    ");
			cntJpql.append("          where 1=1     ").append(subJpql);
		}

		StringBuffer jpql = new StringBuffer();
		if (ifPage == 1) {
			jpql.append("SELECT *                                                                                                    ");
			jpql.append("  FROM (SELECT h.*, ROWNUM rnum  FROM (                                                                     ");
		} else {
			jpql.append("SELECT * FROM (                                                                                                   ");
		}
		
		jpql.append("with custinfo as ");
		jpql.append(" (select dfr.franchiseeid, ");
		jpql.append("         dfr.franame, ");
		jpql.append("         dfr.fratype, ");
		jpql.append("         decode(nvl(dfc.guarantee, 0), 0, -2, 0) guarantee, ");
		jpql.append("         decode(nvl(dfc.shares, 0), 1, 2, 0) shares, ");
		jpql.append("         decode(firstarrears, 1, 2, 2, 1.6, 3, 1.2, 0) firstarrears, ");
		jpql.append("         decode(addarrears, 1, 3, 2, 2.4, 3, 1.8, 0) addarrears, ");
		jpql.append("         case ");
		jpql.append("           when fpickman > 1200000 then ");
		jpql.append("            20 ");
		jpql.append("           when fpickman >= 1000000 and fpickman <= 1200000 then ");
		jpql.append("            16 ");
		jpql.append("           when fpickman < 1200000 then ");
		jpql.append("            12 ");
		jpql.append("           else ");
		jpql.append("            0 ");
		jpql.append("         end fpickman, ");
		jpql.append("         (select decode(max(def.auditprobnum), 2, 5, 3, 4, 4, 3, 5) ");
		jpql.append("            from D_EXPANDBUSI_FRANCHISEEAUDIT def ");
		jpql.append("           where def.franchiseeid = dfr.franchiseeid) auditprobnum ");
		jpql.append("    from d_franchisee dfr ");
		jpql.append("    left join d_franchisee_credit dfc ");
		jpql.append("      on dfr.franchiseeid = dfc.franchiseeid ");
		jpql.append("   where 1 = 1 ");
		jpql.append(subJpql);
		jpql.append(" ), ");//活动
		jpql.append("act as ");//活动
		jpql.append(" (select dfr.franchiseeid, ");
		jpql.append("         decode(da.activitytype, 7, 7, 8, 8, 9, 9, 1) activitytype, ");
		jpql.append("         count(1) cnum ");
		jpql.append("    from d_activity da, d_activity_frapartin daf, d_franchisee dfr ");
		jpql.append("   where da.activityid = daf.activityid ");
		jpql.append("     and daf.franchiseeid = dfr.franchiseeid ");
		jpql.append("     and daf.ispartin = 1 ");		
		jpql.append("      and da.begintime >= to_date('"+EQ_sdate+"', 'yyyy-mm-dd')");
		jpql.append("      and da.begintime <= to_date('"+EQ_edate+"', 'yyyy-mm-dd')");
		jpql.append(subJpql);
		
		jpql.append("   group by dfr.franchiseeid, decode(da.activitytype, 7, 7, 8, 8, 9, 9, 1)), ");
		jpql.append("brand_grade as ");
		jpql.append(" (select t.franchiseeid, ");
		jpql.append("         case ");
		jpql.append("           when t.rls > 8 then ");
		jpql.append("            5 ");
		jpql.append("           when t.rls >= 5 and t.rls <= 8 then ");
		jpql.append("            4 ");
		jpql.append("           when t.rls < 5 then ");
		jpql.append("            3 ");
		jpql.append("         end grade ");
		jpql.append("    from (select a.franchiseeid, ");
		jpql.append("                 nvl((a.cnum / ");
		jpql.append("                     (select decode(count(1), 0, 1) ");
		jpql.append("                         from d_cn_store dcs ");
		jpql.append("                        where dcs.franchiseeid = a.franchiseeid)), ");
		jpql.append("                     0) rls ");
		jpql.append("            from act a ");
		jpql.append("           where a.activitytype = 1) t), ");
		jpql.append("zhaoshang_grade as ");
		jpql.append(" (select t.franchiseeid, ");
		jpql.append("         case ");
		jpql.append("           when t.rls > 8 then ");
		jpql.append("            5 ");
		jpql.append("           when t.rls >= 5 and t.rls <= 8 then ");
		jpql.append("            4 ");
		jpql.append("           when t.rls < 5 then ");
		jpql.append("            3 ");
		jpql.append("         end grade ");
		jpql.append("    from (select a.franchiseeid, ");
		jpql.append("                 nvl((a.cnum / ");
		jpql.append("                     (select decode(count(1), 0, 1) ");
		jpql.append("                         from d_cn_store dcs ");
		jpql.append("                        where dcs.franchiseeid = a.franchiseeid)), ");
		jpql.append("                     0) rls ");
		jpql.append("            from act a ");
		jpql.append("           where a.activitytype = 9) t), ");
		jpql.append("nahuo_grade as ");
		jpql.append(" (select t.franchiseeid, ");
		jpql.append("         case ");
		jpql.append("           when t.rls > 8 then ");
		jpql.append("            5 ");
		jpql.append("           when t.rls >= 5 and t.rls <= 8 then ");
		jpql.append("            4 ");
		jpql.append("           when t.rls < 5 then ");
		jpql.append("            3 ");
		jpql.append("         end grade ");
		jpql.append("    from (select a.franchiseeid, ");
		jpql.append("                 nvl((a.cnum / ");
		jpql.append("                     (select decode(count(1), 0, 1) ");
		jpql.append("                         from d_cn_store dcs ");
		jpql.append("                        where dcs.franchiseeid = a.franchiseeid)), ");
		jpql.append("                     0) rls ");
		jpql.append("            from act a ");
		jpql.append("           where a.activitytype = 1) t), ");
		jpql.append("peixun_grade as ");
		jpql.append(" (select t.franchiseeid, ");
		jpql.append("         case ");
		jpql.append("           when t.rls > 8 then ");
		jpql.append("            2 ");
		jpql.append("           when t.rls >= 5 and t.rls <= 8 then ");
		jpql.append("            1.6 ");
		jpql.append("           when t.rls < 5 then ");
		jpql.append("            1.2 ");
		jpql.append("         end grade ");
		jpql.append("    from (select a.franchiseeid, ");
		jpql.append("                 nvl((a.cnum / ");
		jpql.append("                     (select decode(count(1), 0, 1) ");
		jpql.append("                         from d_cn_store dcs ");
		jpql.append("                        where dcs.franchiseeid = a.franchiseeid)), ");
		jpql.append("                     0) rls ");
		jpql.append("            from act a ");
		jpql.append("           where a.activitytype = 8) t), ");
		jpql.append("month_analyze as ");
		jpql.append(" (select dad.fraid franchiseeid, ");
		jpql.append("          case to_char(to_date('"+EQ_sdate+"', 'yyyy-mm-dd'), 'mm')");
		jpql.append("           when '01' then ");
		jpql.append("            nvl(dad.janfgoods, 0) / nvl(dad.janigoods, 1) ");
		jpql.append("           when '02' then ");
		jpql.append("            nvl(dad.febfgoods, 0) / nvl(dad.febigoods, 1) ");
		jpql.append("           when '03' then ");
		jpql.append("            nvl(dad.marfgoods, 0) / nvl(dad.marigoods, 1) ");
		jpql.append("           when '04' then ");
		jpql.append("            nvl(dad.aprfgoods, 0) / nvl(dad.aprigoods, 1) ");
		jpql.append("           when '05' then ");
		jpql.append("            nvl(dad.mayfgoods, 0) / nvl(dad.mayigoods, 1) ");
		jpql.append("           when '06' then ");
		jpql.append("            nvl(dad.junfgoods, 0) / nvl(dad.junigoods, 1) ");
		jpql.append("           when '07' then ");
		jpql.append("            nvl(dad.julfgoods, 0) / nvl(dad.junigoods, 1) ");
		jpql.append("           when '08' then ");
		jpql.append("            nvl(dad.augfgoods, 0) / nvl(dad.augigoods, 1) ");
		jpql.append("           when '09' then ");
		jpql.append("            nvl(dad.sepfgoods, 0) / nvl(dad.sepigoods, 1) ");
		jpql.append("           when '10' then ");
		jpql.append("            nvl(dad.octfgoods, 0) / nvl(dad.octigoods, 1) ");
		jpql.append("           when '11' then ");
		jpql.append("            nvl(dad.novfgoods, 0) / nvl(dad.novigoods, 1) ");
		jpql.append("           when '12' then ");
		jpql.append("            nvl(dad.decfgoods, 0) / nvl(dad.decigoods, 1) ");
		jpql.append("         end month_goods, ");
		jpql.append("          case to_char(to_date('"+EQ_sdate+"', 'yyyy-mm-dd'), 'mm')");
		jpql.append("           when '01' then ");
		jpql.append("            nvl(dad.janigoods, 0) ");
		jpql.append("           when '02' then ");
		jpql.append("            (nvl(dad.janigoods, 0) + nvl(dad.febigoods, 0)) ");
		jpql.append("           when '03' then ");
		jpql.append("            (nvl(dad.janigoods, 0) + nvl(dad.febigoods, 0) + ");
		jpql.append("            nvl(dad.marigoods, 0)) ");
		jpql.append("           when '04' then ");
		jpql.append("            (nvl(dad.janfgoods, 0) + nvl(dad.febfgoods, 0) + ");
		jpql.append("            nvl(dad.marfgoods, 0) + nvl(dad.aprfgoods, 0)) / ");
		jpql.append("            (nvl(dad.janigoods, 0) + nvl(dad.febigoods, 0) + ");
		jpql.append("            nvl(dad.marigoods, 0) + nvl(dad.aprigoods, 0)) ");
		jpql.append("           when '05' then ");
		jpql.append("            (nvl(dad.janigoods, 0) + nvl(dad.febigoods, 0) + ");
		jpql.append("            nvl(dad.marigoods, 0) + nvl(dad.aprigoods, 0) + ");
		jpql.append("            nvl(dad.mayigoods, 0)) ");
		jpql.append("           when '06' then ");
		jpql.append("            (nvl(dad.janigoods, 0) + nvl(dad.febigoods, 0) + ");
		jpql.append("            nvl(dad.marigoods, 0) + nvl(dad.aprigoods, 0) + ");
		jpql.append("            nvl(dad.mayigoods, 0) + nvl(dad.junigoods, 0)) ");
		jpql.append("           when '07' then ");
		jpql.append("            (nvl(dad.janigoods, 0) + nvl(dad.febigoods, 0) + ");
		jpql.append("            nvl(dad.marigoods, 0) + nvl(dad.aprigoods, 0) + ");
		jpql.append("            nvl(dad.mayigoods, 0) + nvl(dad.junigoods, 0) + ");
		jpql.append("            nvl(dad.junigoods, 0)) ");
		jpql.append("           when '08' then ");
		jpql.append("            (nvl(dad.janigoods, 0) + nvl(dad.febigoods, 0) + ");
		jpql.append("            nvl(dad.marigoods, 0) + nvl(dad.aprigoods, 0) + ");
		jpql.append("            nvl(dad.mayigoods, 0) + nvl(dad.junigoods, 0) + ");
		jpql.append("            nvl(dad.junigoods, 0) + nvl(dad.augigoods, 0)) ");
		jpql.append("           when '09' then ");
		jpql.append("            (nvl(dad.sepigoods, 0) + nvl(dad.janigoods, 0) + ");
		jpql.append("            nvl(dad.febigoods, 0) + nvl(dad.marigoods, 0) + ");
		jpql.append("            nvl(dad.aprigoods, 0) + nvl(dad.mayigoods, 0) + ");
		jpql.append("            nvl(dad.junigoods, 0) + nvl(dad.junigoods, 0) + ");
		jpql.append("            nvl(dad.augigoods, 0)) ");
		jpql.append("           when '10' then ");
		jpql.append("            (nvl(dad.sepigoods, 0) + nvl(dad.janigoods, 0) + ");
		jpql.append("            nvl(dad.febigoods, 0) + nvl(dad.marigoods, 0) + ");
		jpql.append("            nvl(dad.aprigoods, 0) + nvl(dad.mayigoods, 0) + ");
		jpql.append("            nvl(dad.junigoods, 0) + nvl(dad.junigoods, 0) + ");
		jpql.append("            nvl(dad.augigoods, 0) + nvl(dad.octigoods, 0)) ");
		jpql.append("           when '11' then ");
		jpql.append("            (nvl(dad.sepigoods, 0) + nvl(dad.janigoods, 0) + ");
		jpql.append("            nvl(dad.febigoods, 0) + nvl(dad.marigoods, 0) + ");
		jpql.append("            nvl(dad.aprigoods, 0) + nvl(dad.mayigoods, 0) + ");
		jpql.append("            nvl(dad.junigoods, 0) + nvl(dad.junigoods, 0) + ");
		jpql.append("            nvl(dad.augigoods, 0) + nvl(dad.octigoods, 0) + ");
		jpql.append("            nvl(dad.novigoods, 0)) ");
		jpql.append("           when '12' then ");
		jpql.append("            (nvl(dad.sepigoods, 0) + nvl(dad.janigoods, 0) + ");
		jpql.append("            nvl(dad.febigoods, 0) + nvl(dad.marigoods, 0) + ");
		jpql.append("            nvl(dad.aprigoods, 0) + nvl(dad.mayigoods, 0) + ");
		jpql.append("            nvl(dad.junigoods, 0) + nvl(dad.junigoods, 0) + ");
		jpql.append("            nvl(dad.augigoods, 0) + nvl(dad.octigoods, 0) + ");
		jpql.append("            nvl(dad.novigoods, 0) + nvl(dad.decigoods, 0)) ");
		jpql.append("         end total_igoods, ");
		jpql.append("          case to_char(to_date('"+EQ_sdate+"', 'yyyy-mm-dd'), 'mm')");
		jpql.append("           when '01' then ");
		jpql.append("            nvl(dad.janfgoods, 0) ");
		jpql.append("           when '02' then ");
		jpql.append("            nvl(dad.janfgoods, 0) + nvl(dad.febfgoods, 0) ");
		jpql.append("           when '03' then ");
		jpql.append("            (nvl(dad.janfgoods, 0) + nvl(dad.febfgoods, 0) + ");
		jpql.append("            nvl(dad.marfgoods, 0)) ");
		jpql.append("           when '04' then ");
		jpql.append("            (nvl(dad.janfgoods, 0) + nvl(dad.febfgoods, 0) + ");
		jpql.append("            nvl(dad.marfgoods, 0) + nvl(dad.aprfgoods, 0)) ");
		jpql.append("           when '05' then ");
		jpql.append("            (nvl(dad.janfgoods, 0) + nvl(dad.febfgoods, 0) + ");
		jpql.append("            nvl(dad.marfgoods, 0) + nvl(dad.aprfgoods, 0) + ");
		jpql.append("            nvl(dad.mayfgoods, 0)) ");
		jpql.append("           when '06' then ");
		jpql.append("            (nvl(dad.janfgoods, 0) + nvl(dad.febfgoods, 0) + ");
		jpql.append("            nvl(dad.marfgoods, 0) + nvl(dad.aprfgoods, 0) + ");
		jpql.append("            nvl(dad.mayfgoods, 0) + nvl(dad.junfgoods, 0)) ");
		jpql.append("           when '07' then ");
		jpql.append("            (nvl(dad.janfgoods, 0) + nvl(dad.febfgoods, 0) + ");
		jpql.append("            nvl(dad.marfgoods, 0) + nvl(dad.aprfgoods, 0) + ");
		jpql.append("            nvl(dad.mayfgoods, 0) + nvl(dad.junfgoods, 0) + ");
		jpql.append("            nvl(dad.julfgoods, 0)) ");
		jpql.append("           when '08' then ");
		jpql.append("            (nvl(dad.janfgoods, 0) + nvl(dad.febfgoods, 0) + ");
		jpql.append("            nvl(dad.marfgoods, 0) + nvl(dad.aprfgoods, 0) + ");
		jpql.append("            nvl(dad.mayfgoods, 0) + nvl(dad.junfgoods, 0) + ");
		jpql.append("            nvl(dad.julfgoods, 0) + nvl(dad.augfgoods, 0)) ");
		jpql.append("           when '09' then ");
		jpql.append("            (nvl(dad.janfgoods, 0) + nvl(dad.febfgoods, 0) + ");
		jpql.append("            nvl(dad.marfgoods, 0) + nvl(dad.aprfgoods, 0) + ");
		jpql.append("            nvl(dad.mayfgoods, 0) + nvl(dad.junfgoods, 0) + ");
		jpql.append("            nvl(dad.julfgoods, 0) + nvl(dad.augfgoods, 0) + ");
		jpql.append("            nvl(dad.sepfgoods, 0)) ");
		jpql.append("           when '10' then ");
		jpql.append("            (nvl(dad.janfgoods, 0) + nvl(dad.febfgoods, 0) + ");
		jpql.append("            nvl(dad.marfgoods, 0) + nvl(dad.aprfgoods, 0) + ");
		jpql.append("            nvl(dad.mayfgoods, 0) + nvl(dad.junfgoods, 0) + ");
		jpql.append("            nvl(dad.julfgoods, 0) + nvl(dad.augfgoods, 0) + ");
		jpql.append("            nvl(dad.sepfgoods, 0) + nvl(dad.octfgoods, 0)) ");
		jpql.append("           when '11' then ");
		jpql.append("            (nvl(dad.janfgoods, 0) + nvl(dad.febfgoods, 0) + ");
		jpql.append("            nvl(dad.marfgoods, 0) + nvl(dad.aprfgoods, 0) + ");
		jpql.append("            nvl(dad.mayfgoods, 0) + nvl(dad.junfgoods, 0) + ");
		jpql.append("            nvl(dad.julfgoods, 0) + nvl(dad.augfgoods, 0) + ");
		jpql.append("            nvl(dad.sepfgoods, 0) + nvl(dad.octfgoods, 0) + ");
		jpql.append("            nvl(dad.novfgoods, 0)) ");
		jpql.append("           when '12' then ");
		jpql.append("            (nvl(dad.janfgoods, 0) + nvl(dad.febfgoods, 0) + ");
		jpql.append("            nvl(dad.marfgoods, 0) + nvl(dad.aprfgoods, 0) + ");
		jpql.append("            nvl(dad.mayfgoods, 0) + nvl(dad.junfgoods, 0) + ");
		jpql.append("            nvl(dad.julfgoods, 0) + nvl(dad.augfgoods, 0) + ");
		jpql.append("            nvl(dad.sepfgoods, 0) + nvl(dad.octfgoods, 0) + ");
		jpql.append("            nvl(dad.novfgoods, 0) + nvl(dad.decfgoods, 0)) ");
		jpql.append("         end total_fgoods, ");
		jpql.append("          case to_char(to_date('"+EQ_sdate+"', 'yyyy-mm-dd'), 'mm')");
		jpql.append("           when '01' then ");
		jpql.append("            nvl(dad.janfshop, 0) ");
		jpql.append("           when '02' then ");
		jpql.append("            nvl(dad.febfshop, 0) ");
		jpql.append("           when '03' then ");
		jpql.append("            nvl(dad.marfshop, 0) ");
		jpql.append("           when '04' then ");
		jpql.append("            nvl(dad.aprfshop, 0) ");
		jpql.append("           when '05' then ");
		jpql.append("            nvl(dad.mayfshop, 0) ");
		jpql.append("           when '06' then ");
		jpql.append("            nvl(dad.junfshop, 0) ");
		jpql.append("           when '07' then ");
		jpql.append("            nvl(dad.julfshop, 0) ");
		jpql.append("           when '08' then ");
		jpql.append("            nvl(dad.augfshop, 0) ");
		jpql.append("           when '09' then ");
		jpql.append("            nvl(dad.sepfshop, 0) ");
		jpql.append("           when '10' then ");
		jpql.append("            nvl(dad.octfshop, 0) ");
		jpql.append("           when '11' then ");
		jpql.append("            nvl(dad.novfshop, 0) ");
		jpql.append("           when '12' then ");
		jpql.append("            nvl(dad.decfshop, 0) ");
		jpql.append("         end month_shops ");
		jpql.append("    from d_agentanalyze dag, d_agentanalyze_detailed dad, d_franchisee dfr ");
		jpql.append("   where dag.agentanalyzeid = dad.agentanalyzeid ");
		jpql.append("     and dad.fraid = dfr.franchiseeid ");
		jpql.append("     and dad.fraid = dfr.franchiseeid ");
		jpql.append("      and dag.year = "+EQ_sdate.toString().substring(0, 4));
		jpql.append(subJpql);
		jpql.append(" ),");
		
		jpql.append("analyze_grade as ");
		jpql.append(" (select ma.franchiseeid, ");
		jpql.append("         case ");
		jpql.append("           when ma.month_goods > 0.9 then ");
		jpql.append("            15 ");
		jpql.append("           when ma.month_goods >= 0.7 and ma.month_goods <= 0.9 then ");
		jpql.append("            12 ");
		jpql.append("           when ma.month_goods < 0.7 then ");
		jpql.append("            9 ");
		jpql.append("           else ");
		jpql.append("            0 ");
		jpql.append("         end month_goods, ");
		jpql.append("         case ");
		jpql.append("           when ma.total_fgoods / ");
		jpql.append("                decode(ma.total_fgoods, 0, 1, ma.total_fgoods) > 1 then ");
		jpql.append("            25 ");
		jpql.append("           when ma.total_fgoods / ");
		jpql.append("                decode(ma.total_fgoods, 0, 1, ma.total_fgoods) >= 0.6 and ");
		jpql.append("                ma.total_fgoods / ");
		jpql.append("                decode(ma.total_fgoods, 0, 1, ma.total_fgoods) <= 1 then ");
		jpql.append("            20 ");
		jpql.append("           when ma.total_fgoods / ");
		jpql.append("                decode(ma.total_fgoods, 0, 1, ma.total_fgoods) < 0.6 then ");
		jpql.append("            15 ");
		jpql.append("           else ");
		jpql.append("            0 ");
		jpql.append("         end total_goods, ");
		jpql.append("         case ");
		jpql.append("           when ma.month_shops > 3 then ");
		jpql.append("            10 ");
		jpql.append("           when ma.month_shops >= 2 and ma.month_shops <= 3 then ");
		jpql.append("            8 ");
		jpql.append("           when ma.month_shops >= 0 and ma.month_shops <= 1 then ");
		jpql.append("            6 ");
		jpql.append("         end month_shops ");
		jpql.append("    from month_analyze ma), ");
		jpql.append("total as ");
		jpql.append(" (select cu.franchiseeid, ");
		jpql.append("         cu.franame, ");
		jpql.append("         cu.fratype, ");
		jpql.append("         cu.guarantee, ");
		jpql.append("         cu.shares, ");
		jpql.append("         cu.firstarrears, ");
		jpql.append("         cu.addarrears, ");
		jpql.append("         cu.fpickman, ");
		jpql.append("         cu.auditprobnum, ");
		jpql.append("         nvl(bag.grade, 0) brand_grade, ");
		jpql.append("         nvl(zag.grade, 0) zhangshang_grade, ");
		jpql.append("         nvl(ng.grade, 0) nahuo_grade, ");
		jpql.append("         nvl(pg.grade, 0) peixun_grade, ");
		jpql.append("         nvl(ag.month_goods, 0) month_goods, ");
		jpql.append("         nvl(ag.total_goods, 0) total_goods, ");
		jpql.append("         nvl(ag.month_shops, 0) month_shops, ");
		jpql.append("         (cu.guarantee + cu.shares + cu.firstarrears + cu.addarrears + ");
		jpql.append("         cu.fpickman + cu.auditprobnum + nvl(bag.grade, 0) + ");
		jpql.append("         nvl(zag.grade, 0) + nvl(ng.grade, 0) + nvl(pg.grade, 0) + ");
		jpql.append("         nvl(ag.month_goods, 0) + nvl(ag.total_goods, 0) + ");
		jpql.append("         nvl(ag.month_shops, 0)) total_grade ");
		jpql.append("    from custinfo cu ");
		jpql.append("    left join brand_grade bag ");
		jpql.append("      on cu.franchiseeid = bag.franchiseeid ");
		jpql.append("    left join zhaoshang_grade zag ");
		jpql.append("      on cu.franchiseeid = zag.franchiseeid ");
		jpql.append("    left join nahuo_grade ng ");
		jpql.append("      on cu.franchiseeid = ng.franchiseeid ");
		jpql.append("    left join peixun_grade pg ");
		jpql.append("      on cu.franchiseeid = pg.franchiseeid ");
		jpql.append("    left join analyze_grade ag ");
		jpql.append("      on cu.franchiseeid = ag.franchiseeid) ");
		jpql.append("select franchiseeid, ");
		jpql.append("       franame, ");
		jpql.append("       decode(fratype, 1, '加盟商', 2, '区域代理') fratype, ");
		jpql.append("       guarantee, ");
		jpql.append("       shares, ");
		jpql.append("       firstarrears, ");
		jpql.append("       addarrears, ");
		jpql.append("       auditprobnum, ");
		jpql.append("       brand_grade, ");
		jpql.append("       zhangshang_grade, ");
		jpql.append("       nahuo_grade, ");
		jpql.append("       peixun_grade, ");
		jpql.append("       fpickman, ");
		jpql.append("       month_goods, ");
		jpql.append("       total_goods, ");
		jpql.append("       month_shops, ");
		jpql.append("       total_grade, ");
		jpql.append("       case ");
		jpql.append("         when total_grade > 80 then ");
		jpql.append("          'A' ");
		jpql.append("         WHEN total_grade >= 60 AND total_grade <= 80 THEN ");
		jpql.append("          'B' ");
		jpql.append("         when total_grade < 60 then ");
		jpql.append("          'C' ");
		jpql.append("       end  ");
		jpql.append("  from total ");
		jpql.append(" order by total_grade desc ) h ");
		
		if (ifPage == 1) {
			jpql.append(" WHERE ROWNUM <= ?" + GlobalConst.SQL_PLACEHOLDER_END + ")  WHERE rnum > ?"
					+ GlobalConst.SQL_PLACEHOLDER_START);
		}
		Query query = em.createNativeQuery(jpql.toString());
		if (ifPage == 1) {
			query.setParameter(GlobalConst.SQL_PLACEHOLDER_START, searchParam.get("start"));
			query.setParameter(GlobalConst.SQL_PLACEHOLDER_END, Integer.parseInt(searchParam.get("start").toString())
					+ Integer.parseInt(searchParam.get("limit").toString()));
		}
		List<Object[]> qryList = query.getResultList();
		List rsList = new ArrayList();
		Map map;
		for (Object[] rs : qryList) {
			map = new HashMap();
			map.put("franchiseeid", rs[0]);
			map.put("franame", rs[1]);
			map.put("fratype", rs[2]);
			map.put("guarantee", rs[3]);
			map.put("shares", rs[4]);
			map.put("firstarrears", rs[5]);
			map.put("addarrears", rs[6]);
			map.put("auditprobnum", rs[7]);
			map.put("brand_grade", rs[8]);
			map.put("zhangshang_grade", rs[9]);
			map.put("nahuo_grade", rs[10]);
			map.put("peixun_grade", rs[11]);
			map.put("fpickman", rs[12]);
			map.put("month_goods", rs[13]);
			map.put("total_goods", rs[14]);
			map.put("month_shops", rs[15]);
			map.put("total_grade", rs[16]);
			map.put("level", rs[17]);
			rsList.add(map);
		}
		Map<String, Object> retMap = new HashMap<String, Object>();
		retMap.put("totalCount", ifPage == 1 ? em.createNativeQuery(cntJpql.toString()).getSingleResult() : 0);
		retMap.put("records", rsList);
		em.clear();
		return retMap;

	}
}